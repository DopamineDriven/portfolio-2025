export const getPosts = [
  {
    id: "1",
    title: "Google Analytics with Next.js",
    date: "2025-02-12",
    description: "Configuring Google Analytics with Next.js and TypeScript",
    imageUrl:
      "https://raw.githubusercontent.com/DopamineDriven/portfolio-2025/master/apps/web/public/ai/port-37.png",
    link: "/posts/google-analytics-with-nextjs",
    slug: "google-analytics-with-nextjs",
    externalLink: "#",
    tags: ["TypeScript", "Next.js", "GA4"],
    content:
      '#### Install `@types/gtag.js` as a dev dependency with your preferred package manager\n\n```bash\npnpm add -D @types/gtag.js\n```\n\n```bash\nyarn add @types/gtag.js -D\n```\n\n```bash\nnpm install @types/gtag.js -D\n```\n<br />\n\n#### Create an `index.d.ts` file in the root of your current working directory\n\n```ts\n/// <reference types="gtag.js" />\n\ndeclare module "gtag.js";\n\nexport {};\n```\n\n<br />\n#### Ensure that your `tsconfig.json` is configured to handle and track this new declaration file\n\n```json\n{\n  "$schema": "https://json.schemastore.org/tsconfig",\n  "compilerOptions": {\n    "baseUrl": "./",\n    "paths": {\n      "@/*": ["./src/*"]\n    },\n    "plugins": [\n      {\n        "name": "next"\n      }\n    ],\n    "declaration": true,\n    // rest...\n  },\n  "include": [\n    "index.d.ts",\n    "src/**/*.tsx",\n    "src/**/*.ts",\n    // rest...\n  ],\n  "exclude": ["node_modules"]\n}\n\n```\n\n<br />\n#### Create an `analytics.ts` in your `utils` directory\n\nIf using a top-level `src` folder (my personal preference), then this file should be located at `src/utils/analytics.ts`. Otherwise, create the file at `utils/analytics.ts`:\n\n```ts\nexport const GA_TRACKING_ID = process.env.GA_MEASUREMENT_ID ?? "";\nexport const GA_STREAM_ID = process.env.GA_STREAM_ID ?? "";\n\nexport const pageview = (url: URL | string) => {\n  window.gtag("config", GA_TRACKING_ID, {\n    page_path: url\n  });\n};\n\nexport const event = (\n  action: Gtag.EventNames,\n  {\n    event_category,\n    event_label,\n    value,\n    search_term,\n    ...props\n  }: Gtag.EventParams\n) => {\n  window?.gtag("event", action, {\n    event_category,\n    event_label,\n    value,\n    search_term,\n    ...props\n  });\n};\n\nexport const logException = (\n  url: URL,\n  { description, fatal, ...rest }: Gtag.EventParams\n) => {\n  pageview(url);\n  if (description) {\n    window.gtag("event", "exception", {\n      description,\n      fatal,\n      ...rest\n    });\n  }\n};\n\n```\n<br />\n`GA_TRACKING_ID` is an identifier provided by google analytics following the creation of a new property. It should begin with `G-*`for all google analytics 4 properties.\n<br />\n`GA_STREAM_ID` is also found in the same info screen that the tracking ID is retrieved from on new property creation. It should consist of numbers only.\n<br/>\nTo reference either of these values for an existing property, navigate to your google analytics dashboard, select "Admin" on the left toolbar. Then, under "Data Collection and Modification" select "Data Streams". This will take you to a "Web Stream Details" screen that provides both the stream and measurement ids\n\n<br />\n#### Import the `next/script` `Script` component and your analytics workup via a wildcard in the root `layout.tsx` file\n\n```tsx\nimport Script from "next/script";\nimport * as gAnalytics from "@/utils/analytics";\n```\n\n<br />\n#### Add the following two Scripts between the closing body and html tags in the returned jsx\n\n```tsx\nexport default function RootLayout({\n  children\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html suppressHydrationWarning lang="en">\n      <body>{children}</body>\n      <Script\n        async\n        strategy="afterInteractive"\n        id="gtag-init"\n        dangerouslySetInnerHTML={{\n          __html: `\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag(\'js\', new Date());\n          gtag(\'config\', \'${gAnalytics.GA_TRACKING_ID}\', {\n            page_path: window.location.pathname,\n          });\n         `\n        }}\n      />\n      <Script\n        async\n        id={gAnalytics.GA_TRACKING_ID}\n        data-test={gAnalytics.GA_TRACKING_ID}\n        strategy="afterInteractive"\n        src={`https://www.googletagmanager.com/gtag/js?id=${gAnalytics.GA_TRACKING_ID}`}\n      />\n    </html>\n  );\n}\n\n```\n\n<br />\n#### Verify by deploying, navigating to the site, then viewing your google analytics property immediately after\n\nIf everything has been configured properly, you should see at least 1 user under the "Active users in last 30 minutes" section of the analytics home page for your property\n<br/>\nClicking on "View realtime" will provide more details on detected user location(s) and more as shown in the image below\n<div className="my-8">\n  <img\n    src="https://raw.githubusercontent.com/DopamineDriven/portfolio-2025/master/apps/web/public/realtime-users.png"\n    alt="realtime overview google analytics 4"\nstyle={{objectFit: "cover"}}\n    className="rounded-lg shadow-lg"\n  />\n  <aside className="mt-2 text-center text-sm text-gray-600 italic font-basis-grotesque-pro font-light">\n    Realtime Overview\n  </aside>\n</div>\n'
  }
];
